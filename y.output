Terminals unused in grammar

   PROGRAM_ROOT
   PROGRAM_NODE
   SUBPROGRAM
   SUBPROGRAM_ROOT
   SUBPROGRAM_NODE
   IDENT
   RESULT
   EQ
   NE
   LT
   LE
   GT
   GE
   PLUS
   MINUS
   OR
   STAR
   SLASH
   AND
   DIV
   MOD
   ARRAY_ACCESS
   FUNCTION_CALL
   PROCEDURE_CALL
   COMMA
   LINK


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    3 identifier_list: ID
    4                | identifier_list ',' ID

    5 declarations: declarations VAR identifier_list ':' type ';'
    6             | %empty

    7 type: standard_type
    8     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type
    9     | ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' OF standard_type

   10 standard_type: INTEGER
   11              | REAL

   12 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   13                        | %empty

   14 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   15 $@2: %empty

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';'

   17 $@3: %empty

   18 subprogram_head: PROCEDURE ID $@3 arguments ';'

   19 arguments: '(' parameter_list ')'
   20          | %empty

   21 parameter_list: identifier_list ':' type
   22               | parameter_list ';' identifier_list ':' type

   23 compound_statement: BBEGIN optional_statements END

   24 optional_statements: statement_list
   25                    | %empty

   26 statement_list: statement
   27               | statement_list ';' statement

   28 statement: variable ASSIGNOP expression
   29          | procedure_statement
   30          | compound_statement
   31          | IF expression THEN statement ELSE statement
   32          | IF expression THEN statement
   33          | FOR statement TO simple_expression DO statement
   34          | WHILE expression DO statement

   35 variable: ID
   36         | ID '[' expression_list ']'

   37 procedure_statement: ID
   38                    | ID '(' expression_list ')'

   39 expression_list: expression
   40                | expression_list ',' expression

   41 expression: simple_expression
   42           | simple_expression RELOP simple_expression

   43 simple_expression: term
   44                  | ADDOP term
   45                  | simple_expression ADDOP term

   46 term: factor
   47     | term MULOP factor

   48 factor: ID
   49       | ID '(' expression_list ')'
   50       | ID '[' expression_list ']'
   51       | INUM
   52       | RNUM
   53       | '(' expression ')'
   54       | NOT factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 19 38 49 53
')' (41) 2 19 38 49 53
',' (44) 4 9 40
'.' (46) 2
':' (58) 5 16 21 22
';' (59) 2 5 12 16 18 22 27
'[' (91) 8 9 36 50
']' (93) 8 9 36 50
error (256)
PROGRAM (258) 2
PROGRAM_ROOT (259)
PROGRAM_NODE (260)
SUBPROGRAM (261)
SUBPROGRAM_ROOT (262)
SUBPROGRAM_NODE (263)
BBEGIN (264) 23
END (265) 23
PROCEDURE (266) 18
FUNCTION (267) 16
IDENT (268)
INTEGER (269) 10
REAL (270) 11
ARRAY (271) 8 9
OF (272) 8 9
ASSIGNOP (273) 28
RESULT (274)
EQ (275)
NE (276)
LT (277)
LE (278)
GT (279)
GE (280)
PLUS (281)
MINUS (282)
OR (283)
STAR (284)
SLASH (285)
AND (286)
DIV (287)
MOD (288)
NOT (289) 54
DOTDOT (290) 8 9
VAR (291) 5
FOR (292) 33
TO (293) 33
IF (294) 31 32
THEN (295) 31 32
ELSE (296) 31
WHILE (297) 34
DO (298) 33 34
ARRAY_ACCESS (299)
FUNCTION_CALL (300)
PROCEDURE_CALL (301)
COMMA (302)
LINK (303)
MULOP (304) 47
RELOP (305) 42
ADDOP (306) 44 45
ID (307) 2 3 4 16 18 35 36 37 38 48 49 50
INUM (308) 8 9 51
RNUM (309) 52
LOWER_THAN_ELSE (310)


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 2, on right: 0
$@1 (66)
    on left: 1, on right: 2
identifier_list (67)
    on left: 3 4, on right: 2 4 5 21 22
declarations (68)
    on left: 5 6, on right: 2 5 14
type (69)
    on left: 7 8 9, on right: 5 21 22
standard_type (70)
    on left: 10 11, on right: 7 8 9 16
subprogram_declarations (71)
    on left: 12 13, on right: 2 12 14
subprogram_declaration (72)
    on left: 14, on right: 12
subprogram_head (73)
    on left: 16 18, on right: 14
$@2 (74)
    on left: 15, on right: 16
$@3 (75)
    on left: 17, on right: 18
arguments (76)
    on left: 19 20, on right: 16 18
parameter_list (77)
    on left: 21 22, on right: 19 22
compound_statement (78)
    on left: 23, on right: 2 14 30
optional_statements (79)
    on left: 24 25, on right: 23
statement_list (80)
    on left: 26 27, on right: 24 27
statement (81)
    on left: 28 29 30 31 32 33 34, on right: 26 27 31 32 33 34
variable (82)
    on left: 35 36, on right: 28
procedure_statement (83)
    on left: 37 38, on right: 29
expression_list (84)
    on left: 39 40, on right: 36 38 40 49 50
expression (85)
    on left: 41 42, on right: 28 31 32 34 39 40 53
simple_expression (86)
    on left: 43 44 45, on right: 33 41 42 45
term (87)
    on left: 46 47, on right: 43 44 45 47
factor (88)
    on left: 48 49 50 51 52 53 54, on right: 46 47 54


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PROGRAM . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 5


State 5

    2 program: $@1 PROGRAM ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 6


State 6

    2 program: $@1 PROGRAM ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 7

    identifier_list  go to state 8


State 7

    3 identifier_list: ID .

    $default  reduce using rule 3 (identifier_list)


State 8

    2 program: $@1 PROGRAM ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    4 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 9

    2 program: $@1 PROGRAM ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 11


State 10

    4 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 6 (declarations)

    declarations  go to state 13


State 12

    4 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 4 (identifier_list)


State 13

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    5 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 13 (subprogram_declarations)

    subprogram_declarations  go to state 15


State 14

    5 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 7

    identifier_list  go to state 16


State 15

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   12 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 22


State 16

    4 identifier_list: identifier_list . ',' ID
    5 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 23


State 17

   23 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 25 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 29
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 18

   18 subprogram_head: PROCEDURE . ID $@3 arguments ';'

    ID  shift, and go to state 34


State 19

   16 subprogram_head: FUNCTION . ID $@2 arguments ':' standard_type ';'

    ID  shift, and go to state 35


State 20

   12 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 36


State 21

   14 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 6 (declarations)

    declarations  go to state 37


State 22

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 38


State 23

    5 declarations: declarations VAR identifier_list ':' . type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 42
    standard_type  go to state 43


State 24

   33 statement: FOR . statement TO simple_expression DO statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 44
    variable             go to state 32
    procedure_statement  go to state 33


State 25

   31 statement: IF . expression THEN statement ELSE statement
   32          | IF . expression THEN statement

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 51
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 26

   34 statement: WHILE . expression DO statement

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 55
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 27

   35 variable: ID .
   36         | ID . '[' expression_list ']'
   37 procedure_statement: ID .
   38                    | ID . '(' expression_list ')'

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    ASSIGNOP  reduce using rule 35 (variable)
    $default  reduce using rule 37 (procedure_statement)


State 28

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 29

   23 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 58


State 30

   24 optional_statements: statement_list .
   27 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 59

    $default  reduce using rule 24 (optional_statements)


State 31

   26 statement_list: statement .

    $default  reduce using rule 26 (statement_list)


State 32

   28 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 60


State 33

   29 statement: procedure_statement .

    $default  reduce using rule 29 (statement)


State 34

   18 subprogram_head: PROCEDURE ID . $@3 arguments ';'

    $default  reduce using rule 17 ($@3)

    $@3  go to state 61


State 35

   16 subprogram_head: FUNCTION ID . $@2 arguments ':' standard_type ';'

    $default  reduce using rule 15 ($@2)

    $@2  go to state 62


State 36

   12 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 12 (subprogram_declarations)


State 37

    5 declarations: declarations . VAR identifier_list ':' type ';'
   14 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 13 (subprogram_declarations)

    subprogram_declarations  go to state 63


State 38

    2 program: $@1 PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 2 (program)


State 39

   10 standard_type: INTEGER .

    $default  reduce using rule 10 (standard_type)


State 40

   11 standard_type: REAL .

    $default  reduce using rule 11 (standard_type)


State 41

    8 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type
    9     | ARRAY . '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 64


State 42

    5 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 65


State 43

    7 type: standard_type .

    $default  reduce using rule 7 (type)


State 44

   33 statement: FOR statement . TO simple_expression DO statement

    TO  shift, and go to state 66


State 45

   54 factor: NOT . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    factor  go to state 67


State 46

   44 simple_expression: ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    term    go to state 68
    factor  go to state 54


State 47

   48 factor: ID .
   49       | ID . '(' expression_list ')'
   50       | ID . '[' expression_list ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 48 (factor)


State 48

   51 factor: INUM .

    $default  reduce using rule 51 (factor)


State 49

   52 factor: RNUM .

    $default  reduce using rule 52 (factor)


State 50

   53 factor: '(' . expression ')'

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 71
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 51

   31 statement: IF expression . THEN statement ELSE statement
   32          | IF expression . THEN statement

    THEN  shift, and go to state 72


State 52

   41 expression: simple_expression .
   42           | simple_expression . RELOP simple_expression
   45 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 73
    ADDOP  shift, and go to state 74

    $default  reduce using rule 41 (expression)


State 53

   43 simple_expression: term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 43 (simple_expression)


State 54

   46 term: factor .

    $default  reduce using rule 46 (term)


State 55

   34 statement: WHILE expression . DO statement

    DO  shift, and go to state 76


State 56

   38 procedure_statement: ID '(' . expression_list ')'

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 77
    expression         go to state 78
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 57

   36 variable: ID '[' . expression_list ']'

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 79
    expression         go to state 78
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 58

   23 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 23 (compound_statement)


State 59

   27 statement_list: statement_list ';' . statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 80
    variable             go to state 32
    procedure_statement  go to state 33


State 60

   28 statement: variable ASSIGNOP . expression

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 81
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 61

   18 subprogram_head: PROCEDURE ID $@3 . arguments ';'

    '('  shift, and go to state 82

    $default  reduce using rule 20 (arguments)

    arguments  go to state 83


State 62

   16 subprogram_head: FUNCTION ID $@2 . arguments ':' standard_type ';'

    '('  shift, and go to state 82

    $default  reduce using rule 20 (arguments)

    arguments  go to state 84


State 63

   12 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   14 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    BBEGIN     shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    FUNCTION   shift, and go to state 19

    subprogram_declaration  go to state 20
    subprogram_head         go to state 21
    compound_statement      go to state 85


State 64

    8 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type
    9     | ARRAY '[' . INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 86


State 65

    5 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 5 (declarations)


State 66

   33 statement: FOR statement TO . simple_expression DO statement

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    simple_expression  go to state 87
    term               go to state 53
    factor             go to state 54


State 67

   54 factor: NOT factor .

    $default  reduce using rule 54 (factor)


State 68

   44 simple_expression: ADDOP term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 44 (simple_expression)


State 69

   49 factor: ID '(' . expression_list ')'

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 88
    expression         go to state 78
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 70

   50 factor: ID '[' . expression_list ']'

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression_list    go to state 89
    expression         go to state 78
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 71

   53 factor: '(' expression . ')'

    ')'  shift, and go to state 90


State 72

   31 statement: IF expression THEN . statement ELSE statement
   32          | IF expression THEN . statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 91
    variable             go to state 32
    procedure_statement  go to state 33


State 73

   42 expression: simple_expression RELOP . simple_expression

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    simple_expression  go to state 92
    term               go to state 53
    factor             go to state 54


State 74

   45 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 45
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    term    go to state 93
    factor  go to state 54


State 75

   47 term: term MULOP . factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 47
    INUM  shift, and go to state 48
    RNUM  shift, and go to state 49
    '('   shift, and go to state 50

    factor  go to state 94


State 76

   34 statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 95
    variable             go to state 32
    procedure_statement  go to state 33


State 77

   38 procedure_statement: ID '(' expression_list . ')'
   40 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


State 78

   39 expression_list: expression .

    $default  reduce using rule 39 (expression_list)


State 79

   36 variable: ID '[' expression_list . ']'
   40 expression_list: expression_list . ',' expression

    ','  shift, and go to state 97
    ']'  shift, and go to state 98


State 80

   27 statement_list: statement_list ';' statement .

    $default  reduce using rule 27 (statement_list)


State 81

   28 statement: variable ASSIGNOP expression .

    $default  reduce using rule 28 (statement)


State 82

   19 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 7

    identifier_list  go to state 99
    parameter_list   go to state 100


State 83

   18 subprogram_head: PROCEDURE ID $@3 arguments . ';'

    ';'  shift, and go to state 101


State 84

   16 subprogram_head: FUNCTION ID $@2 arguments . ':' standard_type ';'

    ':'  shift, and go to state 102


State 85

   14 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 14 (subprogram_declaration)


State 86

    8 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type
    9     | ARRAY '[' INUM . DOTDOT INUM ',' INUM DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 103


State 87

   33 statement: FOR statement TO simple_expression . DO statement
   45 simple_expression: simple_expression . ADDOP term

    DO     shift, and go to state 104
    ADDOP  shift, and go to state 74


State 88

   40 expression_list: expression_list . ',' expression
   49 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 105
    ','  shift, and go to state 97


State 89

   40 expression_list: expression_list . ',' expression
   50 factor: ID '[' expression_list . ']'

    ','  shift, and go to state 97
    ']'  shift, and go to state 106


State 90

   53 factor: '(' expression ')' .

    $default  reduce using rule 53 (factor)


State 91

   31 statement: IF expression THEN statement . ELSE statement
   32          | IF expression THEN statement .

    ELSE  shift, and go to state 107

    $default  reduce using rule 32 (statement)


State 92

   42 expression: simple_expression RELOP simple_expression .
   45 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 74

    $default  reduce using rule 42 (expression)


State 93

   45 simple_expression: simple_expression ADDOP term .
   47 term: term . MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 45 (simple_expression)


State 94

   47 term: term MULOP factor .

    $default  reduce using rule 47 (term)


State 95

   34 statement: WHILE expression DO statement .

    $default  reduce using rule 34 (statement)


State 96

   38 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 38 (procedure_statement)


State 97

   40 expression_list: expression_list ',' . expression

    NOT    shift, and go to state 45
    ADDOP  shift, and go to state 46
    ID     shift, and go to state 47
    INUM   shift, and go to state 48
    RNUM   shift, and go to state 49
    '('    shift, and go to state 50

    expression         go to state 108
    simple_expression  go to state 52
    term               go to state 53
    factor             go to state 54


State 98

   36 variable: ID '[' expression_list ']' .

    $default  reduce using rule 36 (variable)


State 99

    4 identifier_list: identifier_list . ',' ID
   21 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 109


State 100

   19 arguments: '(' parameter_list . ')'
   22 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 110
    ';'  shift, and go to state 111


State 101

   18 subprogram_head: PROCEDURE ID $@3 arguments ';' .

    $default  reduce using rule 18 (subprogram_head)


State 102

   16 subprogram_head: FUNCTION ID $@2 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 112


State 103

    8 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type
    9     | ARRAY '[' INUM DOTDOT . INUM ',' INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 113


State 104

   33 statement: FOR statement TO simple_expression DO . statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 114
    variable             go to state 32
    procedure_statement  go to state 33


State 105

   49 factor: ID '(' expression_list ')' .

    $default  reduce using rule 49 (factor)


State 106

   50 factor: ID '[' expression_list ']' .

    $default  reduce using rule 50 (factor)


State 107

   31 statement: IF expression THEN statement ELSE . statement

    BBEGIN  shift, and go to state 17
    FOR     shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 115
    variable             go to state 32
    procedure_statement  go to state 33


State 108

   40 expression_list: expression_list ',' expression .

    $default  reduce using rule 40 (expression_list)


State 109

   21 parameter_list: identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 116
    standard_type  go to state 43


State 110

   19 arguments: '(' parameter_list ')' .

    $default  reduce using rule 19 (arguments)


State 111

   22 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 7

    identifier_list  go to state 117


State 112

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type . ';'

    ';'  shift, and go to state 118


State 113

    8 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type
    9     | ARRAY '[' INUM DOTDOT INUM . ',' INUM DOTDOT INUM ']' OF standard_type

    ','  shift, and go to state 119
    ']'  shift, and go to state 120


State 114

   33 statement: FOR statement TO simple_expression DO statement .

    $default  reduce using rule 33 (statement)


State 115

   31 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 31 (statement)


State 116

   21 parameter_list: identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 117

    4 identifier_list: identifier_list . ',' ID
   22 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 121


State 118

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';' .

    $default  reduce using rule 16 (subprogram_head)


State 119

    9 type: ARRAY '[' INUM DOTDOT INUM ',' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 122


State 120

    8 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 123


State 121

   22 parameter_list: parameter_list ';' identifier_list ':' . type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40
    ARRAY    shift, and go to state 41

    type           go to state 124
    standard_type  go to state 43


State 122

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 125


State 123

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 126


State 124

   22 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 22 (parameter_list)


State 125

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 127


State 126

    8 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 8 (type)


State 127

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 128


State 128

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 129


State 129

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 39
    REAL     shift, and go to state 40

    standard_type  go to state 130


State 130

    9 type: ARRAY '[' INUM DOTDOT INUM ',' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 9 (type)
